#!/usr/bin/env node

require('localenv');
require('babel-register');

const log = require('bookrc');
const debug = require('debug')('localtunnel');
const optimist = require('optimist');
const fs = require('fs');

const argv = optimist
    .usage('Usage: $0 --port [num]')
    .options('secure', {
        default: false,
        describe: 'use this flag to indicate proxy over https'
    })
    .options('hostname', {
        default: '',
        describe: 'use this switch for determine hostname'
    })
    .options('port-interval', {
        default: '51000-52000',
        describe: 'intervallo porte aperte'
    })
    .options('port', {
        default: '3150',
        describe: 'listen on this port for outside requests'
    })
    .options('keyfolder', {
        default: null,
        describe: 'folder with keys for authentication'
    })
    .options('max-sockets', {
        default: 10,
        describe: 'maximum number of tcp sockets each client is allowed to establish at one time (the tunnels)'
    })
    .argv;

if (argv.help) {
    optimist.showHelp();
    process.exit();
}

if(argv.keyfolder){
	if(!argv.keyfolder.startsWith("/"))
		argv.keyfolder = fs.realpathSync(process.cwd()+"/"+argv.keyfolder);
}

const server = require('../server')({
    max_tcp_sockets: argv['max-sockets'],
    secure: argv.secure,
    mainhostname: argv.hostname,
    ports: argv['port-interval'],
    keyfolder: argv.keyfolder
});

server.listen(argv.port, () => {
    debug('server listening on port: %d', server.address().port);
});

process.on('SIGINT', () => {
    process.exit();
});

process.on('SIGTERM', () => {
    process.exit();
});

// vim: ft=javascript

